<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://www.damonc.top/</id><title>afeng</title><subtitle>云上日志</subtitle> <updated>2022-11-16T00:27:54+08:00</updated> <author> <name>阿锋</name> <uri>https://www.damonc.top/</uri> </author><link rel="self" type="application/atom+xml" href="https://www.damonc.top/feed.xml"/><link rel="alternate" type="text/html" hreflang="zh-CN" href="https://www.damonc.top/"/> <generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator> <rights> © 2022 阿锋 </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>Unity纹理高级用法(翻译六)</title><link href="https://www.damonc.top/posts/test/" rel="alternate" type="text/html" title="Unity纹理高级用法(翻译六)" /><published>2020-01-04T20:00:00+08:00</published> <updated>2022-11-09T22:03:51+08:00</updated> <id>https://www.damonc.top/posts/test/</id> <content src="https://www.damonc.top/posts/test/" /> <author> <name>catlikecoding</name> </author> <category term="翻译" /> <category term="Shader" /> <summary> 本篇摘要: 扰动法线以模拟凹凸视觉 从高度场计算法线 采样和混合法线贴图 从切线空间转换到世界空间 1 Bump Map(凹凸贴图): NormalMap 法线纹理：比较常用 HeightMap 高度纹理(视差映射)：手机平台不常用，使用法线纹理替代。 Occlusion Map：细节纹理 Secondar y Maps (Detail Maps) &amp;amp; Detail Mask：细节纹理 Bump Map TypeDescribeNormalMap&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;法线图，映射公式：normal=pixel*2-1,反映射：pixel=(normal+1)/2. 法线存储既... </summary> </entry> <entry><title>Unity基础光照多光源采样(翻译五)</title><link href="https://www.damonc.top/posts/Unity-Multi-Light/" rel="alternate" type="text/html" title="Unity基础光照多光源采样(翻译五)" /><published>2020-01-03T09:00:00+08:00</published> <updated>2020-01-03T09:00:00+08:00</updated> <id>https://www.damonc.top/posts/Unity-Multi-Light/</id> <content src="https://www.damonc.top/posts/Unity-Multi-Light/" /> <author> <name>catlikecoding</name> </author> <category term="翻译" /> <category term="Shader" /> <summary> 本篇摘要： 使用多个光源渲染 支持多光源类型 使用光照信息 计算顶点光照 了解球谐函数 Include Files 为了给Shader增加支持多个光源，我们需要增加更多Pass通道。但是这些Pass最终包含了几乎完全相似的代码，为了避免代码的重复性，我们可以通过把着色器代码移动到一个CG文件，然后在Shader代码中引用该文件 在文件目录中手动创建一个MyLighting.cginc文件，再把FirstLighting.shader内从#pragma以下到ENDCG以上区间内代码拷贝进MyLighting.cginc文件。这样我们不直接在shader中写这些重复的代码，而是通过include引用。 注意，.cginc文件也提供了类似的避免重复定义，#define XXX_INCLUDED，再把整个文件内容放置在预处理文件块中。 #if !defin... </summary> </entry> <entry><title>Unity基础光照(翻译四)</title><link href="https://www.damonc.top/posts/Unity-First-light/" rel="alternate" type="text/html" title="Unity基础光照(翻译四)" /><published>2018-01-03T08:00:00+08:00</published> <updated>2022-10-27T12:19:09+08:00</updated> <id>https://www.damonc.top/posts/Unity-First-light/</id> <content src="https://www.damonc.top/posts/Unity-First-light/" /> <author> <name>catlikecoding</name> </author> <category term="翻译" /> <category term="Shader" /> <summary> 本篇摘要 将法线从对象空间转换为世界空间。 使用方向光。 计算光的漫反射和镜面反射。 调整光的能耗强度。 应用金属工作流程。 学习使用Unity的PBS算法。 光照投射到物体. 法线 Normals 可见光是电磁波谱中人眼可以感知的部分，可见光谱没有精确的范围。我们可以看到电磁波谱的一部分，也就是我们所知的可见光，因为人眼睛可以检测到电磁辐射，而光谱的其余部分对我们来说是不可见的。光的单个光量子被称为光子 整个电磁频谱是多少？ 光谱被分成光谱带。从低频到高频，这些被称为无线电波、微波、红外线、可见光、紫外线、X 射线和伽马射线。 光源发出一束光，一些光会照射到物体上，一些光会从物体反射回来。如果那道反射到光最终照射到我们的眼睛或相机镜头上，那么我们就会看到这个物体。 为了能看... </summary> </entry> <entry><title>Unity 多纹理融合(翻译三)</title><link href="https://www.damonc.top/posts/Unity-Combine-Texture/" rel="alternate" type="text/html" title="Unity 多纹理融合(翻译三)" /><published>2018-01-02T20:00:00+08:00</published> <updated>2022-10-23T22:00:00+08:00</updated> <id>https://www.damonc.top/posts/Unity-Combine-Texture/</id> <content src="https://www.damonc.top/posts/Unity-Combine-Texture/" /> <author> <name>catlikecoding</name> </author> <category term="翻译" /> <category term="Shader" /> <summary> 本篇摘要： 采样多个纹理 应用细节纹理 处理线性空间中的颜色 使用 splat 地图 纹理合并 融合多张纹理. 贴图在游戏应用广泛，但它们有局限性。无论以何种尺寸显示，它们都有固定数量的像素。如果需要被渲染到很小网格，可以使用mipmap来保持它们的部分细节。但是当渲染到很大的网格上，会变得模糊。我们也不能无中生有地渲染更多额外的细节。本文讨论了一些解决办法。 细节纹理 通常可以使用更大的纹理，意味着更多的像素和更多的细节。但是纹理的大小也是有限制的，取决于游戏包体大小和目标平台的内存，以及gpu采样能力。 另一种增加像素密度的方法是平铺纹理。出一张尽可能小的贴图，设置为重复模式。近距离观察下重复感可能不会很明显。毕竟当你站着用鼻子接触墙壁时，你只会看到整面墙壁的一小部分。 因此，我们能够通过... </summary> </entry> <entry><title>Unity Shader Fundamentals(翻译二)</title><link href="https://www.damonc.top/posts/Unity-Shader-Fundamentals/" rel="alternate" type="text/html" title="Unity Shader Fundamentals(翻译二)" /><published>2018-01-02T16:00:00+08:00</published> <updated>2022-10-23T22:00:00+08:00</updated> <id>https://www.damonc.top/posts/Unity-Shader-Fundamentals/</id> <content src="https://www.damonc.top/posts/Unity-Shader-Fundamentals/" /> <author> <name>catlikecoding</name> </author> <category term="翻译" /> <category term="Shader" /> <summary> 本篇摘要信息 顶点变换 Color pixels shader 属性 从顶点传数据至片元函数 查看编译后的shader代码 场景初始化 新建一个默认场景，新建一个圆球。这个默认场景本身进行了大量复杂的渲染，为了更容易的掌握Unity的渲染过程，我们先做一些简化设置，把默认的某些花里胡哨的东西先剥离掉。 剥离天空盒 打开Window-Lighting，查看光照设置选项。弹出带有3个选项卡的面板，我们先关注Scene选项卡. 默认光照. 第一选项卡Environment是跟环境光照相关，在这里可以设置天空盒。这个Default-Skybox当前正被用于场景的背景光、环境光、和反射光。设置为none就能关闭这些光。顺便把下面的Realtime Ligting和Mixed Lighting也关掉，现... </summary> </entry> </feed>
